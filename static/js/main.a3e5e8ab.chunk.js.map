{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","play","setPlay","label","setLabel","breakLength","setBreakLength","sessionLength","setSessionLength","minutesLeft","setMinutesLeft","secondsLeft","setSecondsLeft","useEffect","clock","setInterval","document","querySelector","clearInterval","className","id","aria-hidden","onClick","src","type","autoPlay","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3e5e8ab.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [play, setPlay] = useState(`stop`);\n  const [label, setLabel] = useState(`Session`);\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [minutesLeft, setMinutesLeft] = useState(25);\n  const [secondsLeft, setSecondsLeft] = useState(0);\n\n  useEffect(() => {\n    if (play === `start`) {\n      const clock = setInterval(() => {\n        if (minutesLeft > 0 && secondsLeft === 0) {\n          setMinutesLeft(minutesLeft - 1);\n          setSecondsLeft(59);\n        }\n\n        if (secondsLeft > 0) {\n          setSecondsLeft(secondsLeft - 1);\n        }\n\n        if (minutesLeft === 0 && secondsLeft === 0 && label === `Session`) {\n          setLabel(`Break`);\n          setMinutesLeft(breakLength);\n          setSecondsLeft(0);\n          let playElement = document.querySelector(`#beep`);\n          playElement.play();\n        } else if (\n          minutesLeft === 0 &&\n          secondsLeft === 0 &&\n          label === `Break`\n        ) {\n          setLabel(`Session`);\n          setMinutesLeft(sessionLength);\n          setSecondsLeft(0);\n          let playElement = document.querySelector(`#beep`);\n          playElement.play();\n        }\n      }, 1000);\n      return () => clearInterval(clock);\n    }\n  }, [play, minutesLeft, secondsLeft, label, breakLength, sessionLength]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div id=\"box\">\n          <h1>25 + 5 Clock</h1>\n          <div id=\"clock\">\n            <div id=\"top-controls\">\n              <div id=\"break\">\n                <span id=\"break-label\">Break Length</span>\n                <div className=\"break-display\">\n                  <i\n                    id=\"break-decrement\"\n                    className=\"fa fa-arrow-down\"\n                    aria-hidden=\"true\"\n                    onClick={() => {\n                      breakLength > 1\n                        ? setBreakLength(breakLength - 1)\n                        : setBreakLength(breakLength);\n                    }}\n                  ></i>\n                  <span id=\"break-length\">{breakLength}</span>\n                  <i\n                    id=\"break-increment\"\n                    className=\"fa fa-arrow-up\"\n                    aria-hidden=\"true\"\n                    onClick={() => {\n                      breakLength < 60\n                        ? setBreakLength(breakLength + 1)\n                        : setBreakLength(breakLength);\n                    }}\n                  ></i>\n                </div>\n              </div>\n              <div id=\"session\">\n                <span id=\"session-label\">Session Length</span>\n                <div className=\"session-display\">\n                  <i\n                    id=\"session-decrement\"\n                    className=\"fa fa-arrow-down\"\n                    aria-hidden=\"true\"\n                    onClick={() => {\n                      if (sessionLength > 1) {\n                        setSessionLength(sessionLength - 1);\n                        setMinutesLeft(sessionLength - 1);\n                      } else {\n                        setSessionLength(sessionLength);\n                        setMinutesLeft(sessionLength);\n                      }\n                    }}\n                  ></i>\n                  <span id=\"session-length\">{sessionLength}</span>\n                  <i\n                    id=\"session-increment\"\n                    className=\"fa fa-arrow-up\"\n                    aria-hidden=\"true\"\n                    onClick={() => {\n                      if (sessionLength < 60) {\n                        setSessionLength(sessionLength + 1);\n                        setMinutesLeft(sessionLength + 1);\n                      } else {\n                        setSessionLength(sessionLength);\n                        setMinutesLeft(sessionLength);\n                      }\n                    }}\n                  ></i>\n                </div>\n              </div>\n            </div>\n            <div id=\"display\">\n              <span id=\"timer-label\">{label}</span>\n              <span id=\"time-left\">\n                {minutesLeft < 10 ? `0` + minutesLeft : minutesLeft}:\n                {secondsLeft < 10 ? `0` + secondsLeft : secondsLeft}\n              </span>\n            </div>\n            <div id=\"bottom-controls\">\n              <div\n                id=\"start_stop\"\n                onClick={() =>\n                  play === `stop` ? setPlay(`start`) : setPlay(`stop`)\n                }\n              >\n                <i className=\"fa fa-play\" aria-hidden=\"true\"></i>\n                <i className=\"fa fa-pause\" aria-hidden=\"true\"></i>\n              </div>\n              <div id=\"reset\">\n                <i\n                  className=\"fa fa-refresh\"\n                  aria-hidden=\"true\"\n                  onClick={() => {\n                    setPlay(`stop`);\n                    setLabel(`Session`);\n                    setBreakLength(5);\n                    setSessionLength(25);\n                    setMinutesLeft(25);\n                    setSecondsLeft(0);\n                  }}\n                ></i>\n              </div>\n            </div>\n            <audio\n              id=\"beep\"\n              src=\"/mixkit-guitar-notification-alert-2320.mp3\"\n              type=\"audio/mpeg\"\n              autoPlay\n            ></audio>\n            <div id=\"credit\">\n              <p>\n                Designed by{\" \"}\n                <a\n                  href=\"https://www.freecodecamp.org/no-stack-dub-sack\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Peter Weinberg\n                </a>\n              </p>\n              <p>\n                Coded by{\" \"}\n                <a\n                  href=\"https://www.freecodecamp.org/mikeattah\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  Mike Attah\n                </a>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}